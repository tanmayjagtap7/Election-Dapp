{"ast":null,"code":"var _jsxFileName = \"F:\\\\GitHub\\\\Election Dapp\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Electionabi from './contracts/Election.json';\nimport Web3 from \"web3\";\nimport Navbar from './Components/Navbar';\nimport Content from './Components/Content';\nimport Admin from './Components/Admin/Admin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [loader, setLoader] = useState(true);\n  const [electionData, setElectionData] = useState();\n  const [candidate1, setCandidate1] = useState();\n  const [candidate2, setCandidate2] = useState();\n  const [admin, setAdmin] = useState();\n  const [votingstat, setVotingstat] = useState();\n  const [resultStat, setResultStat] = useState(false);\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchaindata();\n  }, []);\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying metamask!\");\n    }\n  };\n\n  const loadBlockchaindata = async () => {\n    setLoader(true);\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    const account = accounts[0];\n    setCurrentAccount(account);\n    const networkId = await web3.eth.net.getId();\n    const networkData = Electionabi.networks[networkId];\n\n    if (networkData) {\n      const election = new web3.eth.Contract(Electionabi.abi, networkData.address);\n      const candidate1 = await election.methods.candidates(1).call();\n      const candidate2 = await election.methods.candidates(2).call();\n      const admin = await election.methods.admin.call().call(); // console.log(election.methods.votingStatus.call())\n\n      while (currentAccount == undefined) {\n        console.log(currentAccount);\n\n        if (currentAccount != admin) {\n          const votingstat = await election.methods.votingStatus(currentAccount).send({\n            from: currentAccount\n          });\n\n          while (votingstat == undefined) {\n            if (votingstat != undefined) {\n              setVotingstat(votingstat);\n            }\n          }\n        }\n      }\n\n      setCandidate1(candidate1);\n      setCandidate2(candidate2);\n      setElectionData(election);\n      setAdmin(admin);\n      setLoader(false); // console.log(election);\n    } else {\n      window.alert(\"The smart contract is not deployed current network\");\n    }\n  };\n\n  const vote = async candidateId => {\n    setLoader(true);\n    await electionData.methods.vote(candidateId).send({\n      from: currentAccount\n    }).on('transactionhash', () => {\n      alert('Vote registered successfully /nThank you for voting');\n      setLoader(false);\n    });\n  };\n\n  if (loader) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        style: {\n          minHeight: '100vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-grow text-primary\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sr-only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      currentAccount: currentAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), currentAccount != admin ? /*#__PURE__*/_jsxDEV(Content, {\n      candidate1: candidate1,\n      candidate2: candidate2,\n      votingstat: votingstat,\n      currentAccount: currentAccount,\n      vote: vote,\n      resultStat: resultStat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(Admin, {\n      candidate1: candidate1,\n      candidate2: candidate2,\n      resultStat: resultStat,\n      setResultStat: setResultStat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 188\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Q38dV8cgUnxhEZNrhLvmbPf80wk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/GitHub/Election Dapp/client/src/App.js"],"names":["useEffect","useState","Electionabi","Web3","Navbar","Content","Admin","App","currentAccount","setCurrentAccount","loader","setLoader","electionData","setElectionData","candidate1","setCandidate1","candidate2","setCandidate2","admin","setAdmin","votingstat","setVotingstat","resultStat","setResultStat","loadWeb3","loadBlockchaindata","window","ethereum","web3","enable","currentProvider","alert","accounts","eth","getAccounts","account","networkId","net","getId","networkData","networks","election","Contract","abi","address","methods","candidates","call","undefined","console","log","votingStatus","send","from","vote","candidateId","on","minHeight"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport Electionabi from './contracts/Election.json';\nimport Web3 from \"web3\";\nimport Navbar from './Components/Navbar';\nimport Content from './Components/Content';\nimport Admin from './Components/Admin/Admin';\n\nfunction App() {\n\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [loader, setLoader] = useState(true);\n  const [electionData, setElectionData] = useState();\n  const [candidate1, setCandidate1] = useState();\n  const [candidate2, setCandidate2] = useState();\n  const [admin, setAdmin] = useState();\n  const [votingstat, setVotingstat] = useState();\n  const [resultStat, setResultStat] = useState(false);\n\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchaindata();\n  }, [])\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    }\n    else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying metamask!\"\n      )\n    }\n  }\n\n  const loadBlockchaindata = async () => {\n    setLoader(true);\n    const web3 = window.web3;\n\n    const accounts = await web3.eth.getAccounts();\n    const account = accounts[0];\n    setCurrentAccount(account)\n\n    const networkId = await web3.eth.net.getId();\n\n    const networkData = Electionabi.networks[networkId];\n\n    if (networkData) {\n      const election = new web3.eth.Contract(Electionabi.abi, networkData.address);\n      const candidate1 = await election.methods.candidates(1).call();\n      const candidate2 = await election.methods.candidates(2).call();\n      const admin = await election.methods.admin.call().call();\n      // console.log(election.methods.votingStatus.call())\n      while (currentAccount == undefined) {\n        console.log(currentAccount)\n        if (currentAccount != admin) {\n      const votingstat = await election.methods.votingStatus(currentAccount).send({ from: currentAccount });\n      while (votingstat == undefined) {\n        if (votingstat != undefined) {\n          setVotingstat(votingstat);\n        }\n      }\n        }\n      }\n\n      setCandidate1(candidate1);\n      setCandidate2(candidate2);\n      setElectionData(election);\n      setAdmin(admin);\n      setLoader(false);\n      // console.log(election);\n    }\n    else {\n      window.alert(\"The smart contract is not deployed current network\")\n    }\n  }\n\n  const vote = async (candidateId) => {\n    setLoader(true);\n    await electionData.methods.vote(candidateId).send({ from: currentAccount }).on('transactionhash', () => {\n      alert('Vote registered successfully /nThank you for voting');\n      setLoader(false);\n    })\n  }\n\n  if (loader) {\n    return (\n      <div className=\"container\">\n        <div className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: '100vh' }}>\n          <div className=\"spinner-grow text-primary\" role=\"status\">\n            <span className=\"sr-only\"></span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar currentAccount={currentAccount} />\n      {currentAccount != admin ? <Content candidate1={candidate1} candidate2={candidate2} votingstat={votingstat} currentAccount={currentAccount} vote={vote} resultStat={resultStat} /> : <Admin candidate1={candidate1} candidate2={candidate2} resultStat={resultStat} setResultStat={setResultStat} />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}